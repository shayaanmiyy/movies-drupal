<?php

declare(strict_types=1);

use Drupal\Core\Breadcrumb\BreadcrumbManager;
use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpFoundation\RequestStack;
use Drupal\Core\Form\FormStateInterface;



/**
 * @file
 * Functions to support theming in the moviesflix theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function moviesflix_preprocess_html(array &$variables): void {
  // Add custom preprocessing logic if needed.
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function movies_theme_preprocess_page(array &$variables) {
  if (\Drupal::routeMatch()->getRouteName() === 'entity.node.canonical') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface && $node->bundle() == 'basic_page') {
      $description = $node->get('field_basic_page_description')->value;
      $variables['page_description'] = $description;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function moviesflix_preprocess_node(array &$variables): void {

}


function moviesflix_preprocess_block(&$variables): void {
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  $variables['logo'] = theme_get_setting('logo.url');
  $description = \Drupal::service('tempstore.private')->get('moviesflix')->get('page_description');
  if (empty($description)) {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node && $node->getType() == 'page') {
      $description = $node->get('field_basic_page_description')->value; // Adjust based on your field name
    }
  }
  if (!empty($description)) {
    $variables['page_description'] = $description;
  } else {
    $variables['page_description'] = '';
  }
}


function moviesflix_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $node_title = \Drupal::transliteration()->transliterate($variables['elements']['#node']->getTitle());
  $suggestions[] = 'node__' . preg_replace('/[^a-z0-9_]+/', '_', mb_strtolower($node_title));
}
